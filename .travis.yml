language: perl
arch:
  - arm64
matrix:
  include:
    - dist: xenial
      perl: 5.24
      env: WITH_XT_TESTS=1 WITH_XML_LIBXML_READER=1 WITH_XML_SIMPLE=1 WITH_IMAGE_XBM=1 WITH_IMAGE_XPM=1
    - dist: xenial
      perl: 5.24
      env: WITH_XML_SIMPLE=1
    - dist: bionic
      perl: 5.26
      env: WITH_TEST_POD_COVERAGE=1
    - dist: bionic
      perl: 5.26
      env: WITH_IMAGE_XBM=1
    - dist: focal
      perl: 5.32
      env: WITH_XML_LIBXML_READER=1 WITH_XML_SIMPLE=1
    - dist: focal
      perl: 5.32
      env: WITH_IMAGE_XPM=1
    - dist: focal
      perl: 5.32
      env: USE_SYSTEM_PERL=1

#    - perl: "5.30"
#      env: WITH_XT_TESTS=1 WITH_XML_LIBXML_READER=1 WITH_XML_SIMPLE=1 WITH_IMAGE_XBM=1 WITH_IMAGE_XPM=1
#      dist: xenial
#    - perl: "5.28"
#      dist: xenial
#    - perl: "5.24"
#      dist: xenial
#    - perl: "5.22"
#      dist: xenial
#    - perl: "5.20"
#      env: WITH_XT_TESTS=1 WITH_XML_LIBXML_READER=1 WITH_XML_SIMPLE=1 WITH_IMAGE_XBM=1 WITH_IMAGE_XPM=1
#      dist: precise
#    - perl: "5.16"
#      env: WITH_TEST_POD_COVERAGE=1
#      dist: precise
#    - perl: "5.14"
#      env: WITH_XML_LIBXML_READER=1 WITH_XML_SIMPLE=1
#      dist: precise
#    - perl: "5.12"
#      env: WITH_XML_SIMPLE=1
#      dist: precise
#    - perl: "5.10"
#      env: WITH_IMAGE_XBM=1
#      dist: precise
#    - perl: "5.8"
#      env: WITH_IMAGE_XPM=1
#      dist: precise
#    # The perl does not matter here, system perl will be used. Also set language to ruby to avoid the anyway failing perl tarball download.
#    - perl: "5.18"
#      language: ruby
#      os: osx
#      osx_image: xcode12.2
#    # Actually the perl here does not matter
#    - perl: "5.14"
#      env: USE_SYSTEM_PERL=1
#      dist: precise
#    # Actually the perl here does not matter
#    - perl: "5.18"
#      env: USE_SYSTEM_PERL=1
#      dist: trusty
#    # Actually the perl here does not matter
#    - perl: "5.26"
#      env: USE_SYSTEM_PERL=1
#      dist: xenial

before_install:
  # Remove broken deb repo:
  - '[ "`lsb_release -cs`" = "precise" ] && (cd /etc/apt/sources.list.d && sudo rm -f mongodb.list google-chrome.list cassandra.list github_git-lfs.list couchdb.list pgdg.list) || true'
  - '[ "$USE_SYSTEM_PERL" = 1 ]        && perlbrew off                               || true'
  - '[ "$WITH_TEST_POD" = 1 ]          && cpanm --quiet --notest Test::Pod           || true'
  - '[ "$WITH_TEST_POD_COVERAGE" = 1 ] && cpanm --quiet --notest Test::Pod::Coverage || true'
  - '[ "$WITH_XML_LIBXML_READER" = 1 ] && cpanm --quiet --notest XML::LibXML::Reader || true'
  - '[ "$WITH_XML_SIMPLE" = 1 ]        && cpanm --quiet --notest XML::Simple         || true'
  - '[ "$WITH_IMAGE_XBM" = 1 ]         && cpanm --quiet --notest Image::Xbm          || true'
  - '[ "$WITH_IMAGE_XPM" = 1 ]         && cpanm --quiet --notest Image::Xpm          || true'
  - '[ "$WITH_XT_TESTS" = 1 ]          && (sudo apt-get update -qq && sudo apt-get install -qq libdb-dev) || true'
  - '[ "$WITH_XT_TESTS" = 1 ]          && cpanm --quiet --notest Image::ExifTool Image::Size Imager DB_File Test::Strict Test::Synopsis Test::Kwalitee XML::SAX::ExpatXS IPC::Run || true'
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew install cpanminus; fi
install:
  - if [ "$USE_SYSTEM_PERL" = "1" -o "$TRAVIS_OS_NAME" = "osx" ]; then cpanm --sudo --quiet --installdeps --notest .; else if ! cpanm --quiet --installdeps --notest .; then cat ~/.cpanm/work/*/build.log; false; fi; fi
script:
  - '[ "$WITH_XT_TESTS" =  1 ] || (perl Makefile.PL && make test)'
# skip xt/mass.t, because installing Image::Magick is difficult
  - '[ "$WITH_XT_TESTS" != 1 ] || (perl Makefile.PL && make all metafile && prove -l t xt)'

after_script:
  - make distcheck
  - HARNESS_OPTIONS=j4:c make disttest

branches:
  except:
    - /appveyor/
    - /github-actions/
    - /doozer/
